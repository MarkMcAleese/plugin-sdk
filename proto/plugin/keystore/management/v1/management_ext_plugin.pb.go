// Code generated by protoc-gen-go-extension. DO NOT EDIT.

package managementv1

import (
	api "github.com/openkcm/plugin-sdk/api"
	grpc "google.golang.org/grpc"
)

const (
	Type                = "KeystoreProvider"
	GRPCServiceFullName = "plugin.keystore.management.v1.KeystoreProvider"
)

func KeystoreProviderPluginServer(server KeystoreProviderServer) api.PluginServer {
	return keystoreProviderPluginServer{KeystoreProviderServer: server}
}

type keystoreProviderPluginServer struct {
	KeystoreProviderServer
}

func (s keystoreProviderPluginServer) Type() string {
	return Type
}

func (s keystoreProviderPluginServer) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (s keystoreProviderPluginServer) RegisterServer(server *grpc.Server) any {
	RegisterKeystoreProviderServer(server, s.KeystoreProviderServer)
	return s.KeystoreProviderServer
}

type KeystoreProviderPluginClient struct {
	KeystoreProviderClient
}

func (s KeystoreProviderPluginClient) Type() string {
	return Type
}

func (c *KeystoreProviderPluginClient) IsInitialized() bool {
	return c.KeystoreProviderClient != nil
}

func (c *KeystoreProviderPluginClient) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (c *KeystoreProviderPluginClient) InitClient(conn grpc.ClientConnInterface) any {
	c.KeystoreProviderClient = NewKeystoreProviderClient(conn)
	return c.KeystoreProviderClient
}
