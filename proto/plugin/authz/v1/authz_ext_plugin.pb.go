// Code generated by protoc-gen-go-extension. DO NOT EDIT.

package authzv1

import (
	api "github.com/openkcm/plugin-sdk/api"
	grpc "google.golang.org/grpc"
)

const (
	Type                = "ExternalAuthorization"
	GRPCServiceFullName = "plugin.authz.v1.ExternalAuthorization"
)

func ExternalAuthorizationPluginServer(server ExternalAuthorizationServer) api.PluginServer {
	return externalAuthorizationPluginServer{ExternalAuthorizationServer: server}
}

type externalAuthorizationPluginServer struct {
	ExternalAuthorizationServer
}

func (s externalAuthorizationPluginServer) Type() string {
	return Type
}

func (s externalAuthorizationPluginServer) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (s externalAuthorizationPluginServer) RegisterServer(server *grpc.Server) any {
	RegisterExternalAuthorizationServer(server, s.ExternalAuthorizationServer)
	return s.ExternalAuthorizationServer
}

type ExternalAuthorizationPluginClient struct {
	ExternalAuthorizationClient
}

func (s ExternalAuthorizationPluginClient) Type() string {
	return Type
}

func (c *ExternalAuthorizationPluginClient) IsInitialized() bool {
	return c.ExternalAuthorizationClient != nil
}

func (c *ExternalAuthorizationPluginClient) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (c *ExternalAuthorizationPluginClient) InitClient(conn grpc.ClientConnInterface) any {
	c.ExternalAuthorizationClient = NewExternalAuthorizationClient(conn)
	return c.ExternalAuthorizationClient
}
