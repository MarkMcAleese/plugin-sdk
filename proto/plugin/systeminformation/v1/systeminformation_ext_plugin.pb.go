// Code generated by protoc-gen-go-extension. DO NOT EDIT.

package systeminformationv1

import (
	api "github.com/openkcm/plugin-sdk/api"
	grpc "google.golang.org/grpc"
)

const (
	Type                = "SystemInformationService"
	GRPCServiceFullName = "plugin.systeminformation.v1.SystemInformationService"
)

func SystemInformationServicePluginServer(server SystemInformationServiceServer) api.PluginServer {
	return systemInformationServicePluginServer{SystemInformationServiceServer: server}
}

type systemInformationServicePluginServer struct {
	SystemInformationServiceServer
}

func (s systemInformationServicePluginServer) Type() string {
	return Type
}

func (s systemInformationServicePluginServer) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (s systemInformationServicePluginServer) RegisterServer(server *grpc.Server) any {
	RegisterSystemInformationServiceServer(server, s.SystemInformationServiceServer)
	return s.SystemInformationServiceServer
}

type SystemInformationServicePluginClient struct {
	SystemInformationServiceClient
}

func (s SystemInformationServicePluginClient) Type() string {
	return Type
}

func (c *SystemInformationServicePluginClient) IsInitialized() bool {
	return c.SystemInformationServiceClient != nil
}

func (c *SystemInformationServicePluginClient) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (c *SystemInformationServicePluginClient) InitClient(conn grpc.ClientConnInterface) any {
	c.SystemInformationServiceClient = NewSystemInformationServiceClient(conn)
	return c.SystemInformationServiceClient
}
