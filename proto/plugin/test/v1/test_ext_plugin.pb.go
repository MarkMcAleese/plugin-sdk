// Code generated by protoc-gen-go-extension. DO NOT EDIT.

package testv1

import (
	api "github.com/openkcm/plugin-sdk/api"
	grpc "google.golang.org/grpc"
)

const (
	Type                = "TestService"
	GRPCServiceFullName = "plugin.test.v1.TestService"
)

func TestServicePluginServer(server TestServiceServer) api.PluginServer {
	return testServicePluginServer{TestServiceServer: server}
}

type testServicePluginServer struct {
	TestServiceServer
}

func (s testServicePluginServer) Type() string {
	return Type
}

func (s testServicePluginServer) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (s testServicePluginServer) RegisterServer(server *grpc.Server) any {
	RegisterTestServiceServer(server, s.TestServiceServer)
	return s.TestServiceServer
}

type TestServicePluginClient struct {
	TestServiceClient
}

func (s TestServicePluginClient) Type() string {
	return Type
}

func (c *TestServicePluginClient) IsInitialized() bool {
	return c.TestServiceClient != nil
}

func (c *TestServicePluginClient) GRPCServiceName() string {
	return GRPCServiceFullName
}

func (c *TestServicePluginClient) InitClient(conn grpc.ClientConnInterface) any {
	c.TestServiceClient = NewTestServiceClient(conn)
	return c.TestServiceClient
}
